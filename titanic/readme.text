
1.首先我们先查看数据结构
data_train = pd.read_csv("Train.csv")
1.1 查看数据信息
特征: ID，存活，等仓，名字，性别，年纪，登机口，票价，票号，堂兄弟个数。
数据条数：891
数据残缺: Age 714 ,cabin 204, Embarked 889
数据存在非数值型,Name.Sex,Ticker,Embarked,Cabin
数值型数据:ID,Survived,Pclass,Age,Silsp,Parch,Fare//
注意:同时也要看测试数据是否有不一样的缺失情况导致代码运行失败
2.2 数据描述 （最大值，数量，最小值，标准差，平均值等）
注释：kind='kde'密度曲线，‘bar’ 柱形图
发现：
    1.存活率，0-549 1-342
2.Pclass , 3-491,2-216,1-184 (有价值)
    3.Age 主要集中在25岁 （有价值）
    4.Sex male-557 female-314 （有价值）
    5.登机口
    S    644
    C    168
    Q     77
    6.存活+几等舱 （有价值）
    7.存活+Age
    6.存活+Sex
    7.存活+登机口
    6.存活+票价 1-48 0-22 （有价值）
    2.3 特征工程
    通常遇到缺值的情况，我们会有几种常见的处理方式

    如果缺值的样本占总数比例极高，我们可能就直接舍弃了，作为特征加入的话，可能反倒带入noise，影响最后的结果了
    如果缺值的样本适中，而该属性非连续值特征属性(比如说类目属性)，那就把NaN作为一个新类别，加到类别特征中
    如果缺值的样本适中，而该属性为连续值特征属性，有时候我们会考虑给定一个step(比如这里的age，我们可以考虑每隔2/3岁为一个步长)，然后把它离散化，之后把NaN作为一个type加到属性类目中。
    有些情况下，缺失的值个数并不是特别多，那我们也可以试着根据已有的值，拟合一下数据，补充上。




